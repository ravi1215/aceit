tc - O(v+e)
SC - O(N)

uses kahn algorithm (bfs toposort)

COURSE SCHEDULE 1 , FOR 2 -> 
if(ans.size() == V) return ans;
return {};

bool canFinish(int numCourses, vector<vector<int>>& prerequisites) {
        int N = numCourses;
        vector<vector<int>> adj(N);
        for (auto it : prerequisites) {
             adj[it[1]].push_back(it[0]); // ðŸ‘ˆ Because to take 'first', you need to do 'second' first
        }
        
        vector<int> indegree(N, 0);
        
        for(int i = 0 ; i < N; i++){
            for(auto it : adj[i]){
                indegree[it]++;
            }
        }
        
        queue<int> q;
        for(int i = 0; i < N; i++){
            if(indegree[i] == 0){
                q.push(i);
            }
        }
        
        vector<int> ans;
        while(!q.empty()){
            int node = q.front();
            q.pop();
            ans.push_back(node);
            
            for(auto it : adj[node]){
                indegree[it]--;
                if(indegree[it] == 0) q.push(it);
            }
        }
        
        if(ans.size() == N) return true;
        return false;
    }