AN ONLY BE DONE USING min head ->

min head + linked list

 struct compare
    {
        bool operator()(ListNode* a, ListNode *b)
        {
            return a->val > b->val;   // min heap  
        }
    };


    ListNode* mergeKLists(vector<ListNode*>& lists) {
        if(lists.empty()) return NULL;

        priority_queue<ListNode*, vector<ListNode*>, compare>pq; 
        for (ListNode* list : lists) {
            if (list) {
                pq.push(list);
            }
        }

        ListNode *mergeH = new ListNode(0);
        ListNode *last = mergeH;

        while(!pq.empty()){
            ListNode* curr = pq.top();
            pq.pop();
            
            last->next = curr;
            last = last->next;
            
            if(curr != NULL && curr->next != NULL){
                pq.push(curr->next);
            }
        }

        return mergeH->next;
    }

TC : O(NLogK)