Height = max(leftHeight, rightHeight)
Diameter = max(leftHeight + rightHeight, leftDiameter, rightDiameter)

for tree to be balanced leftheight-rightheight <= 1

int maxDepth(TreeNode* root) {
        if(root == NULL) return 0;
        int leftheight = maxDepth(root->left);
        int rightheight = maxDepth(root->right);
        return 1 + max(leftheight, rightheight);
    }

int height(TreeNode* root, int& diameter){
        if (!root) {
            return 0;
        }

        int lh = height(root->left, diameter);
        int rh = height(root->right, diameter);

        diameter = max(diameter, lh + rh);

        return 1 + max(lh, rh);
    }

    int diameterOfBinaryTree(TreeNode* root) {
        int diameter = 0;
        height(root, diameter);
        return diameter;
    }