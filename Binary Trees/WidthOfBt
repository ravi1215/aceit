last - first + 1

logic hai aur har idx ko uss level ke minimum idx se substract karenge overflow rokne kr liye

formula 0 based indexing - 2i+1 and 2i+2

TC AND SC : O(N)

int widthOfBinaryTree(TreeNode* root) {
        if(root == nullptr) return 0;
        queue<pair<TreeNode* ,long long>> q;
        q.push({root, 0});
        int width = 0;

        while(!q.empty()){
            int size = q.size();
            long long min = q.front().second;
            long long first, last;
            for(int i = 0; i<size; i++){
                long long cur_id = q.front().second - min;
                TreeNode* node = q.front().first;
                q.pop();

                if(i == 0) first = cur_id;
                if(i == size-1) last = cur_id;

                if(node->left) q.push({node->left, 2*cur_id+1});
                if(node->right) q.push({node->right, 2*cur_id+2});
            }
            width = max(width, static_cast<int>(last-first+1));
        }
        return width;
    }